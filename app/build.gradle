apply plugin: 'com.android.application'
apply plugin: 'realm-android'

/**
 * we use the number of commits as versionCode
 *
 * @link https://plus.google.com/u/0/+MarcReichelt/posts/BX2he4vSJaM
 */
static def getNumberOfGitCommits() {
    return 'git rev-list --count HEAD'.execute().text.trim().toInteger()
}

/**
 * we make the git hash available in the app
 *
 * @link https://plus.google.com/u/0/+MarcReichelt/posts/BX2he4vSJaM
 */
static def getCurrentGitHash() {
    return 'git rev-parse --short HEAD'.execute().text.trim()
}

/**
 * Render a markdown file via Github's API
 *
 * @param md the input file to render
 * @param html the output file
 * @return
 */
static def renderMarkdown(File md, File html) {
    println("Rendering " + md.toString() + " to " + html.toString());
    def process = [
            'curl', '-sS',
            '-X', 'POST',
            '-H', 'Content-Type: text/x-markdown',
            '--data-binary', '@' + md.toString(),
            '-o', html.toString(),
            'https://api.github.com/markdown/raw'
    ].execute()
    process.waitFor()
    println process.err.text

}

android {
    def props = new Properties()
    //props.load(new FileInputStream(System.getProperty("user.home") + "/Dropbox/AndroidKeystore/TheCashster.properties"))
    props.load(project.rootProject.file('TheCashster.properties').newDataInputStream())

    compileSdkVersion 26
    defaultConfig {
        applicationId "org.splitbrain.thecashster"
        minSdkVersion 21
        targetSdkVersion 26
        versionCode getNumberOfGitCommits()
        versionName "1.0.2"
        resValue "string", "app_git_hash", getCurrentGitHash()
        resValue "string", "FourSquareClientID", props.getProperty("FourSquareClientID")
        resValue "string", "FourSquareClientSecret", props.getProperty("FourSquareClientSecret")
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        renderMarkdown(rootProject.file("README.md"), rootProject.file("app/src/main/assets/README.html"))
    }

    signingConfigs {
        release {
            storeFile file(System.getProperty("user.home") + "/Dropbox/AndroidKeystore/android.keystore")
            storePassword props.getProperty("keyStorePassword")
            keyAlias props.getProperty("keyAlias")
            keyPassword props.getProperty("keyAliasPassword")

        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            applicationIdSuffix '.debug'
            versionNameSuffix '-debug'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'

    // sheet API and permission management
    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation 'com.google.android.gms:play-services-location:11.4.2'
    implementation 'com.google.android.gms:play-services-places:11.4.2'
    implementation 'com.google.android.gms:play-services-auth:11.4.2'
    implementation 'pub.devrel:easypermissions:0.3.0'
    implementation('com.google.api-client:google-api-client-android:1.23.0') {
        exclude group: 'org.apache.httpcomponents'
    }
    implementation('com.google.apis:google-api-services-sheets:v4-rev488-1.23.0') {
        exclude group: 'org.apache.httpcomponents'
    }

    implementation 'com.google.maps.android:android-maps-utils:0.4.4'

    // ButterKnife DI
    implementation 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'

}
